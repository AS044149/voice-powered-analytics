AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'AWS CloudFormation Template to create the IAM roles and DynamoDB table needed for the workshop.'
Parameters:
  DDBReadCapacityUnits:
    Description: Provisioned read throughput
    Type: Number
    Default: '5'
    MinValue: '1'
    MaxValue: '10'
    ConstraintDescription: Must be between 1 and 10
  DDBWriteCapacityUnits:
    Description: Provisioned write throughput
    Type: Number
    Default: '5'
    MinValue: '1'
    MaxValue: '10'
    ConstraintDescription: Must be between 1 and 10
  AthenaOutputS3BucketName:
    Description: The S3 Bucket that will hold Athena query results
    Type: String
Resources:
  VPAMetricsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: metric
          AttributeType: S
      KeySchema:
        - AttributeName: metric
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref 'DDBReadCapacityUnits'
        WriteCapacityUnits: !Ref 'DDBWriteCapacityUnits'
      TableName: VPA_Metrics_Table
  VPALambdaAthenaPollerRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: VPALambdaAthenaPollerRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
             - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
  VPALambdaAlexaSkillRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: VPALambdaAlexaSkillRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
             - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
  AthenaPollerPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AthenaPollerPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: ['logs:*', 's3:*', 'dynamodb:*', 'athena:*', 'xray:*', 'glue:*']
          Resource: '*'
      Roles:
        -
          Ref: "VPALambdaAthenaPollerRole"
  AlexaSkillPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AlexaSkillPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: ['logs:*', 'dynamodb:scan', 'xray:*']
          Resource: '*'
      Roles:
        -
          Ref: "VPALambdaAlexaSkillRole"
  AthenaOutputS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AthenaOutputS3BucketName
  ScheduledRule:
    Type: "AWS::Events::Rule"
    Properties:
      Name: VPAEvery5Min
      Description: "Every5Minutes"
      ScheduleExpression: "rate(5 minutes)"
      State: "ENABLED"
Outputs:
  TableName:
    Value: !Ref 'VPAMetricsTable'
    Description: VPA Metrics Table Name
  BucketName:
    Value: !Ref 'AthenaOutputS3Bucket'
    Description: Name of S3 bucket to hold Athena query results
  AthenaPollerRole:
    Value: !Ref 'VPALambdaAthenaPollerRole'
    Description: Name of the IAM Role for the Lambda polling Athena
  AlexaSkillRole:
    Value: !Ref 'VPALambdaAlexaSkillRole'
    Description: Name of the IAM Role for the Lambda used by Alexa
  CWEEvery5Min:
    Value: !Ref 'ScheduledRule'
    Description: Name of the CloudWatch Event Rule